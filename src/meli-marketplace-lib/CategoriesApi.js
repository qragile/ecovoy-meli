/**
 * MELI Markeplace SDK
 * This is a the codebase to generate a SDK for Open Platform Marketplace
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Categories service.
* @module meli-marketplace-lib/CategoriesApi
* @version 3.0.0
*/
export default class CategoriesApi {

    /**
    * Constructs a new CategoriesApi. 
    * @alias module:meli-marketplace-lib/CategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the categoriesCategoryIdGet operation.
     * @callback module:meli-marketplace-lib/CategoriesApi~categoriesCategoryIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return by category.
     * @param {String} categoryId 
     * @param {module:meli-marketplace-lib/CategoriesApi~categoriesCategoryIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    categoriesCategoryIdGet(categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling categoriesCategoryIdGet");
      }

      let pathParams = {
        'category_id': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/categories/{category_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sitesSiteIdCategoriesGet operation.
     * @callback module:meli-marketplace-lib/CategoriesApi~sitesSiteIdCategoriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a categories by site.
     * @param {String} siteId 
     * @param {module:meli-marketplace-lib/CategoriesApi~sitesSiteIdCategoriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sitesSiteIdCategoriesGet(siteId, callback) {
      let postBody = null;
      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling sitesSiteIdCategoriesGet");
      }

      let pathParams = {
        'site_id': siteId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/sites/{site_id}/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sitesSiteIdDomainDiscoverySearchGet operation.
     * @callback module:meli-marketplace-lib/CategoriesApi~sitesSiteIdDomainDiscoverySearchGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predictor
     * @param {String} siteId 
     * @param {String} q 
     * @param {String} limit 
     * @param {module:meli-marketplace-lib/CategoriesApi~sitesSiteIdDomainDiscoverySearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sitesSiteIdDomainDiscoverySearchGet(siteId, q, limit, callback) {
      let postBody = null;
      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling sitesSiteIdDomainDiscoverySearchGet");
      }
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling sitesSiteIdDomainDiscoverySearchGet");
      }
      // verify the required parameter 'limit' is set
      if (limit === undefined || limit === null) {
        throw new Error("Missing the required parameter 'limit' when calling sitesSiteIdDomainDiscoverySearchGet");
      }

      let pathParams = {
        'site_id': siteId
      };
      let queryParams = {
        'q': q,
        'limit': limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/sites/{site_id}/domain_discovery/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
