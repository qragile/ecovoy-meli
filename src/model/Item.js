/**
 * MELI Markeplace SDK
 * This is a the codebase to generate a SDK for Open Platform Marketplace
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Attributes from './Attributes';
import ItemPictures from './ItemPictures';
import Variations from './Variations';

/**
 * The Item model module.
 * @module model/Item
 * @version 3.0.0
 */
class Item {
    /**
     * Constructs a new <code>Item</code>.
     * @alias module:model/Item
     * @param title {String} 
     * @param categoryId {String} 
     * @param price {Number} 
     * @param currencyId {String} 
     * @param availableQuantity {String} 
     * @param buyingMode {String} 
     * @param listingTypeId {String} 
     * @param condition {String} 
     * @param description {String} 
     * @param videoId {String} 
     * @param pictures {Array.<module:model/ItemPictures>} 
     */
    constructor(title, categoryId, price, currencyId, availableQuantity, buyingMode, listingTypeId, condition, description, videoId, pictures) { 
        
        Item.initialize(this, title, categoryId, price, currencyId, availableQuantity, buyingMode, listingTypeId, condition, description, videoId, pictures);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, categoryId, price, currencyId, availableQuantity, buyingMode, listingTypeId, condition, description, videoId, pictures) { 
        obj['title'] = title;
        obj['category_id'] = categoryId;
        obj['price'] = price;
        obj['currency_id'] = currencyId;
        obj['available_quantity'] = availableQuantity;
        obj['buying_mode'] = buyingMode;
        obj['listing_type_id'] = listingTypeId;
        obj['condition'] = condition;
        obj['description'] = description;
        obj['video_id'] = videoId;
        obj['pictures'] = pictures;
    }

    /**
     * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Item} obj Optional instance to populate.
     * @return {module:model/Item} The populated <code>Item</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Item();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('currency_id')) {
                obj['currency_id'] = ApiClient.convertToType(data['currency_id'], 'String');
            }
            if (data.hasOwnProperty('available_quantity')) {
                obj['available_quantity'] = ApiClient.convertToType(data['available_quantity'], 'String');
            }
            if (data.hasOwnProperty('buying_mode')) {
                obj['buying_mode'] = ApiClient.convertToType(data['buying_mode'], 'String');
            }
            if (data.hasOwnProperty('listing_type_id')) {
                obj['listing_type_id'] = ApiClient.convertToType(data['listing_type_id'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('video_id')) {
                obj['video_id'] = ApiClient.convertToType(data['video_id'], 'String');
            }
            if (data.hasOwnProperty('pictures')) {
                obj['pictures'] = ApiClient.convertToType(data['pictures'], [ItemPictures]);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [Attributes]);
            }
            if (data.hasOwnProperty('variations')) {
                obj['variations'] = ApiClient.convertToType(data['variations'], [Variations]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} title
 */
Item.prototype['title'] = undefined;

/**
 * @member {String} category_id
 */
Item.prototype['category_id'] = undefined;

/**
 * @member {Number} price
 */
Item.prototype['price'] = undefined;

/**
 * @member {String} currency_id
 */
Item.prototype['currency_id'] = undefined;

/**
 * @member {String} available_quantity
 */
Item.prototype['available_quantity'] = undefined;

/**
 * @member {String} buying_mode
 */
Item.prototype['buying_mode'] = undefined;

/**
 * @member {String} listing_type_id
 */
Item.prototype['listing_type_id'] = undefined;

/**
 * @member {String} condition
 */
Item.prototype['condition'] = undefined;

/**
 * @member {String} description
 */
Item.prototype['description'] = undefined;

/**
 * @member {String} video_id
 */
Item.prototype['video_id'] = undefined;

/**
 * @member {Array.<module:model/ItemPictures>} pictures
 */
Item.prototype['pictures'] = undefined;

/**
 * @member {Array.<module:model/Attributes>} attributes
 */
Item.prototype['attributes'] = undefined;

/**
 * @member {Array.<module:model/Variations>} variations
 */
Item.prototype['variations'] = undefined;






export default Item;

